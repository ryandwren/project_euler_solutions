package com.ryandwren.project_euler_solutions.problems

/*
Even Fibonacci Numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first terms will be:
1,2,3,5,8,13,21,34,55,89
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */


fun solveP2EvenFibonacciNumbers():Int{
    val firstTerm = 1
    val secondTerm = 2
    val max = 4000000
    val listOfEvenFibonacciNums = arrayListOf(secondTerm)

    val stack = ArrayDeque(listOf(firstTerm,secondTerm))

    var withinBounds = true
    while (withinBounds){
        val nextItem = stack.last() + stack[stack.size -2]
        if (nextItem < max){
            if (nextItem.rem(2) == 0){
                listOfEvenFibonacciNums.add(nextItem)
            }
            stack.addLast(nextItem)
        } else{
            withinBounds = false
        }
    }

    val sum = listOfEvenFibonacciNums.sum()
    return sum
}